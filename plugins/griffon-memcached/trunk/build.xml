<project xmlns:ivy="antlib:org.apache.ivy.ant" name="@griffon.project.key@" default="test">
    <property environment="env"/>
  	<property name="ivy.install.version" value="2.0.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.griffon/ivy" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy-${ivy.install.version}.jar" />

    <target name="download-ivy" unless="offline">
		<available file="${ivy.jar.file}" property="ivy.available"/>
		<antcall target="-download-ivy" />
    </target>

	<target name="-download-ivy" unless="ivy.available">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://www.apache.org/dist/ant/ivy/${ivy.install.version}/apache-ivy-${ivy.install.version}-bin.zip"
            dest="${ivy.home}/ivy.zip" usetimestamp="true" verbose="true"/>
	    <unzip src="${ivy.home}/ivy.zip" dest="${ivy.jar.dir}">
		   <patternset>
		        <include name="**/*.jar"/>
		    </patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

    <target name="init-ivy" depends="download-ivy" unless="ivy.lib.path">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>


    <property name="lib.dir" value="${basedir}/lib"/>

    <macrodef name="griffon">
        <attribute name="script"/>
        <attribute name="args" default="" />
        <sequential>
            <griffonTask script="@{script}" args="@{args}" classpathref="griffon.classpath">
                <compileClasspath refid="compile.classpath"/>
                <testClasspath refid="test.classpath"/>
                <runtimeClasspath refid="app.classpath"/>
            </griffonTask>
        </sequential>
    </macrodef>

    <!-- =================================
          target: resolve
         ================================= -->
    <target name="-resolve" description="--> Retrieve dependencies with ivy" depends="init-ivy">
        <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]"/>
    </target>

    <target name="-init-griffon" depends="-resolve">
        <path id="griffon.classpath">
            <fileset dir="${lib.dir}/build"/>
			<fileset dir="${lib.dir}"/>
        </path>

        <taskdef name="griffonTask"
                 classname="griffon.ant.GriffonTask"
                 classpathref="griffon.classpath"/>
    </target>

    <target name="deps-report" depends="-resolve" description="--> Generate report of module dependencies.">
        <ivy:report conf="*"/>
    </target>

    <!-- =================================
          target: clean
         ================================= -->
 	<target name="clean" description="--> Cleans a Griffon application">
		<mkdir dir="${lib.dir}/build"/>
		<mkdir dir="${lib.dir}/compile"/>
		<mkdir dir="${lib.dir}/runtime"/>
		<mkdir dir="${lib.dir}/test"/>	
		<delete failonerror="true">
		<fileset dir="${lib.dir}/build" includes="*/"/>
		<fileset dir="${lib.dir}/compile" includes="*/"/>
		<fileset dir="${lib.dir}/runtime" includes="*/"/>
		<fileset dir="${lib.dir}/test" includes="*/"/>
		</delete>
		<antcall target="--griffon-clean"/>
	</target>

	<!-- extra target to avoid errors on Windows because libs on classpath can not be deleted -->
	<target name="--griffon-clean" depends="-init-griffon">
		<griffon script="Clean"/>
	</target>

    <!-- =================================
          target: compile
         ================================= -->
    <target name="compile" depends="-init-griffon" description="--> Compiles a Griffon application">
        <griffon script="Compile"/>
    </target>

    <!-- =================================
          target: war
         ================================= -->
    <target name="war" depends="-init-griffon" description="--> Creates a WAR of a Griffon application">
        <griffon script="War"/>
    </target>

    <!-- =================================
          target: test
         ================================= -->
    <target name="test" depends="-init-griffon" description="--> Run a Griffon applications unit tests">
        <griffon script="TestApp"/>
    </target>

    <!-- =================================
          target: run
         ================================= -->
    <target name="run" depends="-init-griffon" description="--> Runs a Griffon application using embedded Jetty">
        <griffon script="RunApp"/>
    </target>

    <!-- =================================
          target: deploy
         ================================= -->
    <target name="deploy" depends="war" description="--> The deploy target (initially empty)">
        <!-- TODO -->
    </target>
</project>
